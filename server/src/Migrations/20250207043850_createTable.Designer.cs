// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(ApplicationContextDb))]
    [Migration("20250207043850_createTable")]
    partial class createTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateIssueDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChassisNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverNationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmiratesIdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmptyWeight")
                        .HasColumnType("int");

                    b.Property<string>("EngineNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportCountryTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportPlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceExpiryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsurancePolicyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationExpiryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationPlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrafficCodeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleMake")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = -2,
                            Category = "Private",
                            CertificateIssueDate = "2024-02-01",
                            CertificateReferenceNumber = "CERT987654",
                            ChassisNumber = "CHS123456789",
                            CountryOfOrigin = "Japan",
                            DriverName = "John Doe",
                            DriverNationality = "American",
                            EmiratesIdNumber = "EID123456789",
                            EmptyWeight = 1500,
                            EngineNumber = "ENG987654321",
                            ExportCountryTo = "Yemen",
                            ExportPlateNumber = "EXP12345",
                            FuelType = "Petrol",
                            InsuranceCompany = "AXA",
                            InsuranceExpiryDate = "2025-06-30",
                            InsurancePolicyNumber = "INS123456",
                            InsuranceType = "Comprehensive",
                            LicenseNumber = "LN123456",
                            LicenseSource = "USA",
                            ModelYear = "2023",
                            Nationality = "American",
                            NumberOfDoors = 4,
                            NumberOfSeats = 5,
                            OwnerName = "John Doe",
                            PassportNumber = "P123456789",
                            RegistrationDate = "2024-01-01",
                            RegistrationExpiryDate = "2025-01-01",
                            RegistrationPlateNumber = "ABC123",
                            TrafficCodeNumber = "TC987654",
                            VehicleColor = "White",
                            VehicleMake = "Toyota",
                            VehicleType = "Sedan"
                        },
                        new
                        {
                            Id = -1,
                            Category = "Private",
                            CertificateIssueDate = "2023-06-15",
                            CertificateReferenceNumber = "CERT123456",
                            ChassisNumber = "CHS987654321",
                            CountryOfOrigin = "USA",
                            DriverName = "Jane Smith",
                            DriverNationality = "British",
                            EmiratesIdNumber = "EID987654321",
                            EmptyWeight = 2000,
                            EngineNumber = "ENG123456789",
                            ExportCountryTo = "Yemen",
                            ExportPlateNumber = "EXP67890",
                            FuelType = "Diesel",
                            InsuranceCompany = "Allianz",
                            InsuranceExpiryDate = "2024-12-31",
                            InsurancePolicyNumber = "INS987654",
                            InsuranceType = "Third Party",
                            LicenseNumber = "LN987654",
                            LicenseSource = "UK",
                            ModelYear = "2022",
                            Nationality = "British",
                            NumberOfDoors = 5,
                            NumberOfSeats = 7,
                            OwnerName = "Jane Smith",
                            PassportNumber = "P987654321",
                            RegistrationDate = "2023-05-10",
                            RegistrationExpiryDate = "2024-05-10",
                            RegistrationPlateNumber = "XYZ789",
                            TrafficCodeNumber = "TC123456",
                            VehicleColor = "Black",
                            VehicleMake = "Ford",
                            VehicleType = "SUV"
                        });
                });

            modelBuilder.Entity("Server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ali@gmail.com",
                            Password = "123",
                            Role = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
